---
title: "Values etc for Ghana BINs draft manuscript"

format: 
  docx: default
editor: source
date: "`r Sys.Date()`"
date-format: medium
execute:
  echo: false
  warning: false
---

```{r basic summary}
library(here)
library(tidyverse)
library(countrycode)
library(vegan)

bold_and_earthcape_combined <- read_csv(
  file = here('data', 'processed_data', 
              'bold_and_earthcape_combined.csv')
) %>% janitor::clean_names() %>%
  
  mutate(
    # make the date/time columns formatted as date/time, not character
    #date_time_start = dmy_hm(date_time_start),
    # make a column of just the start DATES of sampling (remove the time data)
    start_date = date(date),
    sampling_month = month(start_date, label = T),
    sampling_year = year(start_date),
    year_and_month = paste(sampling_month, sampling_year))


# get a vector of all months sampled, arranged from first to last
sampling_months <- bold_and_earthcape_combined %>%
  arrange(start_date) %>%
  filter(!is.na(start_date)) %>%
  pull(year_and_month) %>%
  unique()


# read in dataset of just the data from our BOLD projects
our_bold_data <- read_csv(
  here('data', 'processed_data', 'our_organised_bold_data.csv'))

total_nsamples <- nrow(our_bold_data)

overall_chaorichness <- read_csv(here('results', 'overall_chaorichness.csv'))

# read in data for biogeographic summary
our_big_df <- read_csv(here('data', 'processed_data', 'bold_public_bin_matches.csv'))%>%
  mutate(geographic_region = countrycode(sourcevar = country, 
                                         origin = "country.name",
                                         destination = "region")
  ) %>%
  filter(!is.na(geographic_region), 
         !is.na(order_name))

source(here('parameters.R'))

# read in basic BIN availability
our_data_with_availability <- read_csv(
  here('data', 'processed_data', 'bold_data_with_availability.csv')) %>%
  select(BIN, available)
```

## 

Dave here: I've made this skeleton document to house assorted values that we'll want to use in the final manuscript itself, they should just be copied into that document from here. It's quick for me to auto-update this file and all of the values within, sadly it would be a headache for me to continually incorporate everyone's edits to the manuscript prose itself. All values, dates etc in here will have been correct at the date above, which was when I last re-rendered it.

# Methods

## Data analyses

```{r}
our_data_download_date <- file.info(here('data', 'raw_data','GCEP','bold.xlsx'))$ctime %>% 
  ymd_hms() %>%
  format(., "%d %B %Y")

# get the dates that the bold country-queries were made
country_query_dates <- list.files(here('data', 'processed_data', 'bold_queries'),
          full.names = T) %>% 
  file.info(.) %>% 
  as.tibble() %>% 
  pull(ctime) %>%
  as_datetime() %>%
  date()

# sadly trying to format a vector of dates prettily makes min/max calculations of 
# them get confused, otherwise I would do it above.


# most-abundant BINs in our dataset's availability
retention_threshold <- 200
abundant_bin_summary <- our_data_with_availability %>%
  group_by(BIN, available) %>%
  summarise(n = n()) %>%
  arrange(desc(n)) %>%
  head(retention_threshold) %>%
  group_by(available) %>%
  summarise(n_bins = n())
```

Our data was downloaded from BOLD on `r our_data_download_date`, and BOLD was queried for information on the publicly available BINs that matched BINs in our dataset.

Using the iNEXT R package, sampling completeness was calculated for each taxonomic order and trap type used; using the rate of BIN-accumulation to estimate the sampling effort required before all potential BINs in the landscape that would be captured by a given trap-type were obtained. Calculations only took place for combinations of taxonomic order and trap-type where at least `r nbin_threshold` BINs were detected. I.e. calculations would not have taken place for spiders and malaise traps, if only `r nbin_threshold-1` spider BINs were detected in malaise traps.

### NMDS

A series of non-metric multidimensional scaling (NMDS) analyses were ran for the dataset using the 'vegan' R package. Taxonomic groups were only included in the dataset if they contained a minimum of `r nmds_inclusion_threshold` samples (i.e. a taxonomic order would only be included in the order-level NMDS if the dataset contained `r nmds_inclusion_threshold` or more samples of that order). CDC traps were excluded from this analysis due to the low number of BINs obtained from them.

To analyse the extent of potential differences between the communities included in the NMDS analyses, we also ran a Permutational Multivariate Analysis of Variance Using Distance Matrices, using bray-curtis dissimilarity, using the vegan R package, and the betadispersion of the communities in each trap was calculated.

### Geographic analyses.

We queried BOLD for the available metadata all BINs in our dataset that already had public matches from other studies.The resulting dataset was used to identify countries and continents which shared many BINs with our dataset, and the taxonomic composition of those BINs. The 20 countries with the highest numbers of public BINs matching BINs in our dataset were queried between `r min(country_query_dates) %>% format(., "%d %B %Y")` and `r max(country_query_dates) %>% format(., "%d %B %Y")`, to show areas where similar communities have been detected. This is more likely to represent geographic biases in sampling than similarities in the arthropod communities themselves.

### Closing sentence

All analyses took place using R. All code for this manuscript is available at https://github.com/hemprichbennett/ghana_bins.

# Results

## Basic summary statistics.

We detected `r bold_and_earthcape_combined %>% filter(!is.na(bin)) %>% pull(bin) %>% unique() %>% length() %>% prettyNum(., big.mark=',')` unique BINs across the `r total_nsamples %>% prettyNum(., big.mark=',')` samples sequenced as of `r our_data_download_date` (see @tbl-per-traptype-summary). For the `r nrow(overall_chaorichness)` most abundant taxonomic orders, the average estimated sampling completeness was `r round(mean(overall_chaorichness$percent_completeness),1)`%.

```{r}
#| label: tbl-per-traptype-summary
#| tbl-cap: The number of samples and BINs sequenced for each trap type used
diversity_stats <- bold_and_earthcape_combined %>%
  filter(!is.na(type)) %>%
  group_by(type, bin) %>%
  summarise(nbins = n()) %>%
  ungroup() %>%
  group_by(type) %>%
  summarise(`Shannon Diversity` = diversity(nbins)) %>%
  mutate(`Shannon Diversity` = signif(`Shannon Diversity`, digits = 3))

# make a tibble of the number of BINs that were unique to a given trap type (e.g.)
# how many BINs were ONLY caught in a CDC trap
# first, a vector of BINS only caught in one trap type
unique_bins <- bold_and_earthcape_combined %>%
  group_by(bin) %>%
  # the number of trap types each bin was captured in
  summarise(n_trap_types = length(unique(type))) %>%
  filter(n_trap_types ==1) %>%
  pull(bin)

# now use that vector to find the number of unique captures
unique_trap_vals <- bold_and_earthcape_combined %>%
  filter(bin %in% unique_bins) %>%
  select(bin, type) %>%
  distinct() %>%
  group_by(type) %>%
  summarise(`Number of BINs unique to the trap type` = n())

tbl_1 <- bold_and_earthcape_combined %>% 
  filter(!is.na(type)) %>% 
  group_by(type) %>% 
  summarise(`Number of samples` = n(), 
            `Number of BINs` = length(unique(bin))) %>%
  left_join(unique_trap_vals)%>%
  left_join(diversity_stats) 

write_csv(tbl_1, file = here('results', 'manuscript_tables', 'table_1.csv'))

knitr::kable(tbl_1, format.args = list(big.mark = ','))
```

Of the `r retention_threshold` most-abundant BINs in our dataset, `r abundant_bin_summary %>% filter(available == 'Already publicly available') %>% pull(n_bins)` were already publicly available, `r abundant_bin_summary %>% filter(available == 'Already sequenced, no public sequences') %>% pull(n_bins)` had already been sequenced but no other representatives of that BIN were publicly available on BOLD, and `r abundant_bin_summary %>% filter(available == 'Unique to our project') %>% pull(n_bins)` BINs were unique to our project.

## Trap types

### Trap types and novel BINs

Heath traps provided the majority of samples barcoded (@tbl-per-traptype-summary), and also provided the majority of novel BINs in our analysis @fig-bin_availability.

![Public availability of BINs detected, by trap-type](../figures/trap_bin_availability.jpeg){#fig-bin_availability}

### BIN accumulation

No trap types or taxonomic orders approached completeness (@fig-type1 and @fig-type2).

![Type 1 iNEXT plot](../figures/inext_plots/type1_inext_plot.png){#fig-type1 height="20cm"}

![Type 2 iNEXT plot](../figures/inext_plots/type2_inext_plot.png){#fig-type2 height="20cm"}

### NMDS

```{r}
order_adonis <- read_csv(here('results', 'adonis', 'order_summary.csv'))
family_adonis <- read_csv(here('results', 'adonis', 'family_summary.csv'))

```

NMDS ordinations for both taxonomic Order and Family showed some overlap between the trap types (@fig-order-nmds and @fig-family-nmds). The Permutational Multivariate Analysis of Variance test showed a significant difference between trap types at both the order level (p =`r order_adonis %>% select(p.value) %>% head(1)%>% signif(5)`) and family level (p = `r family_adonis %>% select(p.value) %>% head(1)%>% signif(5)`). 

![Order-level NMDS plot](../figures/nmds/order_nmds.png){#fig-order-nmds height="20cm"}

![Family-level NMDS plot](../figures/nmds/family_nmds.png){#fig-family-nmds height="20cm"}

## Geographic analyses

There were `r our_big_df %>% select(bin_uri) %>% distinct() %>% nrow()%>% prettyNum(., big.mark=',')` distinct BINs in our project which are also found publicly on BOLD. Those BINs are found across `r our_big_df %>% select(country) %>% distinct() %>% nrow()` countries in `r our_big_df %>% select(geographic_region) %>% distinct() %>% nrow()` geographic regions, as shown in @tbl-geographic_matches:

```{r}
#| label: tbl-geographic_matches
#| tbl-cap: The number of BINs found in our dataset that have been found in each major geographic region.
read_csv(here('results', 'public_data', 'orders_by_region.csv')) %>%
  rename(`Order name` = order_name) %>%
  knitr::kable()
```

```{r}
n_top_countries <- 20
```

With that in mind, @tbl-top_countries is a breakdown of the public BINs in common with our project, from the `r n_top_countries` countries which had the most BINs in common with our project:

```{r}
#| label: tbl-top_countries
#| tbl-cap: The top 20 countries in terms of sharing BINs with our project



country_rankings <- our_big_df %>%
  select(country, bin_uri) %>%
  distinct() %>%
  group_by(country) %>%
  summarise(`Number of shared BINs` = n()) %>%
  arrange(desc(`Number of shared BINs`)) %>%
  slice(1:n_top_countries) %>%
  rename(Country = country) %>%
  mutate('Ranking' = rownames(.)) %>%
  select(Ranking, Country, `Number of shared BINs`) #
  knitr::kable(country_rankings)
```

It's encouraging to see that several African countries are in the top 20, but noteworthy that Ghana is at number `r country_rankings %>% filter(Country == 'Ghana') %>% pull(Ranking)` and there are few representatives of nearby countries. Some of that will be due to varying habitat types, but it highlights just how undersampled West Africa currently is. A lot of these common BINs are also likely to be cosmopolitan/invasive taxa, rather than species only native to Ghana and the nearby area.

# 
